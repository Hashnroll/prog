(define (average x y)
  (/ (+ x y) 2))
;
(define tolerance 0.00001)
(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (let ((next (f guess)))
      (display "x = ") (display guess) (display " and ") (display "f(x) = ") (display next)
      (newline)
      (if (close-enough? guess next)
	  next
	  (try next))))
  (try first-guess))

(fixed-point cos 1.0)

;
(define (average-damp f)
  (lambda (x) (average x (f x))))

(define (sqrt x)
  (fixed-point (average-damp (lambda (y) (/ x y)))
	       2.0))

(sqrt 2)

;ex1.35
(define golden-ratio
  (fixed-point (lambda (x) (average x (+ 1 (/ 1 x))))
	       2.0))

golden-ratio

;ex1.36
(define (x-pow-x-equals-1000)
  (fixed-point (lambda (x) (/ (log 1000) (log x)))
	       2.25))

(x-pow-x-equals-1000)

		      
			      

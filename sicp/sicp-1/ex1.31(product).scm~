(define (identity x)
  x)

(define (inc x)
  (+ x 1))

;
(define (product term a next b)
  (if (> a b)
      1
      (* (term a)
	 (product term (next a) next b))))

(define (product term a next b)
  (define (product-iter a result)
    (if (> a b)
	result
	(product-iter (next a) (* (term a) result))))
  (product-iter a 1))


(define (fact n)
  (product identity 1 inc n))

(fact 6)

;
(define (pi n)
  (define (pi-term n)
    (if (even? n)
	(/ (+ n 2) (+ n 1))
	(/ (+ n 1) (+ n 2))))
  (* 4.0
     (product pi-term 1 inc n)))

(pi 100)
	


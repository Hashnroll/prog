import random

def showBoard(board):
    print('   |   |')
    print(' ' + board[7] + ' | ' + board[8] + ' | ' + board[9] + ' ')
    print('   |   |')
    print('-----------')
    print('   |   |')
    print(' ' + board[4] + ' | ' + board[5] + ' | ' + board[6] + ' ')
    print('   |   |')
    print('-----------')
    print('   |   |')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3] + ' ')
    print('   |   |\n')

def inputPlayerLetter():
    letter = ''
    while not letter == 'X' and not letter == 'O':
        print('Do you want to be X or O?')
        letter = input().upper()
    if letter == 'X':
        return ['X', 'O']
    else:
        return ['O', 'X']

def whoIsFirst():
    return random.choice(['player', 'computer'])

def makeMove(board, move, letter):
    board[move] = letter

def isFree(board, move):
    return board[move] == ' '

def isWinner(board, letter):
    return (board[7] == board[8] == board[9] == letter or
            board[4] == board[5] == board[6] == letter or
            board[1] == board[2] == board[3] == letter or
            board[7] == board[4] == board[1] == letter or
            board[8] == board[5] == board[2] == letter or
            board[9] == board[6] == board[3] == letter or
            board[7] == board[5] == board[3] == letter or
            board[1] == board[5] == board[9] == letter)
    
def getPlayerMove(board):
    move = -1
    while (not move in range(10)) or board[int(move)] != ' ':
        print('What is your next move? (1-9)')
        move = input()
    return int(move)

def getComputerMove(board, computerLetter, playerLetter):
    for i in range(10):
        if isFree(board, i):
            copy = list(board) #make a copy
            copy[i] = computerLetter
            if isWinner(copy, computerLetter):
                return i
            
    for i in range(10):
        if isFree(board, i):
            copy = list(board) #make a copy
            copy[i] = playerLetter
            if isWinner(copy, playerLetter):
                return i
            
    corners = filter(lambda x: isFree(board, x), [1, 3, 7, 9])
    if corners != None:
        return random.choice(corners)
    
    if isSpace(board, 5):
        return 5

    move = random.choice(filter(lambda x: isFree(board, x), [2, 4, 6, 8]))
    return move

def isBoardFull(board):
    for i in range(1, 10):
        if board[i] == ' ':
            return False
    return True

def makeEmptyBoard(board):
    for i in range(10):
        board.append(' ')

def playAgain():
    answer = ''
    while answer[0].lower() != 'y' and answer[0].lower() != 'n':
        print('Do you want to play again?(y or n)')
        answer = input().lower()
    return answer.startswith('y')
    
    
    
while True:
    board = []
    makeEmptyBoard(board)
    playerLetter, computerLetter = inputPlayerLetter()
    turn = whoIsFirst()
    print('The ' + turn + ' goes first.')
    gameIsPlaying = True

    while gameIsPlaying:
        if turn == 'player':
            showBoard(board)
            move = getPlayerMove(board)
            makeMove(board, move, playerLetter)
            if isWinner(board, playerLetter):
                showBoard(board)
                print('You won!')
                gameIsPlaying = False
            elif isBoardFull(board):
                showBoard(board)
                print('It is tie.')
                gameIsPlaying = False
            else:
                turn = 'computer'
        if turn == 'computer':
            move = getComputerMove(board, computerLetter, playerLetter)
            makeMove(board, move, computerLetter)
            if isWinner(board, computerLetter):
                showBoard(board)
                print('You lost!')
                gameIsPlaying = False
            elif isBoardFull(board):
                showBoard(board)
                print('It is tie.')
                gameIsPlaying = False
            else:
                turn = 'player'

        if not gameIsPlaying:
                break

    if not playAgain():
        break
            
    
    
